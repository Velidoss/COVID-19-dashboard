{"version":3,"sources":["components/PerCountryCases/PerCountryCases.module.scss","App.module.scss","components/GlobalCases/GlobalCases.module.scss","components/Header/Header.module.scss","components/Diagram/Diagram.module.scss","store/GlobalReducer.js","store/actionTypes.js","components/Header/Menu/Menu.module.scss","store/GlobalContext.js","assets/svg/searchSvg.svg","customHooks/useClickOutside.js","customHooks/useSelectedCountry.js","components/Header/Search/SearchCountry.jsx","components/Header/Search/Search.jsx","assets/svg/bars-solid.svg","constants/contentConstants.js","components/Header/Menu/SelectQuantities/SelectQuantities.jsx","components/Header/Menu/SelectTimePeriod/SelectTimePeriod.jsx","components/Header/Menu/Menu.jsx","components/Header/Header.jsx","assets/svg/expandSvg.svg","components/GlobalCases/GlobalCases.jsx","components/PerCountryCases/Country.jsx","components/PerCountryCases/PerCountryCases.jsx","components/Map/MapMarker/MapMarker.jsx","assets/svg/times-solid.svg","components/Map/MapCountryInfo/MapCountryInfo.jsx","constants/apiEndpoints.js","components/Map/Map.jsx","components/GlobalLosses/CountryWithLosses.jsx","components/GlobalLosses/GlobalLosses.jsx","components/Recovered/CountryWithRecovered.jsx","components/Recovered/Recovered.jsx","components/Diagram/Diagram.jsx","App.jsx","api/api.js","store/GlobalState.js","index.js","components/GlobalLosses/GlobalLosses.module.scss","components/Recovered/Recovered.module.scss","components/Header/Search/Search.module.scss"],"names":["module","exports","GlobalReducer","state","action","type","GET_GLOBAL_INFO","global","payload","GET_COUNTRIES_INFO","countries","filter","country","countryInfo","_id","selectedCountryInfo","selectedCountryId","SET_COUNTRY_TO_OBSERVE","UNSET_COUNTRY_TO_OBSERVE","GET_SEARCH_RESULT","searchResult","toLowerCase","includes","query","SET_COUNTRY_REGIONS_INFO","countryRegions","SET_CONTENT_TYPE","contentConfig","contentType","value","GlobalContext","createContext","useClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useSelectedCountry","countryId","React","useState","isSelected","setSelected","SearchCountry","setCountryToObserve","unsetCountryToObserve","flagImg","className","style","search__results_item_selected","search__results_item","id","selected","onClick","search__results_item_text","search__results_item_img","src","alt","Search","open","toggleOpen","changeQuery","useContext","getSearchResult","searchRef","useRef","search","search__input","onChange","search__img","searchSvg","search__results","map","flag","contentConstants","timePeriod","fullPeriod","lastDay","quantities","whole","per100","SelectQuantities","setContentConfig","selectedValue","setSelectedValue","menu__items_item","menu__items_item__select","menu__items_item__select_option","SelectTimePeriod","Menu","menuRef","menu","menu__btn","menu__btn_img","menuImg","menu__items","Header","title","titleText","GlobalCases","cases","countryName","isStretched","toggleIsStretched","setClassName","casesRef","stretchButton","expandSvg","GlobalCases__text","GlobalCases__number","Country","cases__list_item_selected","cases__list_item","cases__list_item_injured","casesPerOneMillion","cases__list_item_country","PerCountryCases","cases__title","cases__list","length","sort","a","b","MapMarker","select","long","lat","radius","setRadius","Math","floor","coordinates","width","height","backgroundColor","borderRadius","opacity","MapCountryInfo","close","deaths","recovered","mapCountryInfo","mapCountryInfo__button","label","closeIcon","apiEndpoints","globalInfoEndpoint","countriesInfoEndpoint","Map","MapComponent","ReactMapboxGl","accessToken","toggleSelected","containerStyle","position","—Åenter","zoom","zIndex","losses__list_item_selected","losses__list_item","losses__list_item_name","losses__list_item_number","deathsPerOneMillion","GlobalLosses","losses","losses__stat","losses__stat_name","losses__stat_number","losses__list","CountryWithLosses","CountryWithRecovered","recovered__list_item_selected","recovered__list_item","recovered__list_item_recovered","recoveredPerOneMillion","recovered__list_item_country","Recovered","recovered__title","recovered__title_top","recovered__title_bot","recovered__list","Diagram","diagram","App","getGlobalState","getPerCountryState","data","globalCases","mainContainer","appPanelLeft","mapContainer","appPanelRight","appPanelRight__top","appPanelRight__bot","api","url","fetch","request","json","GlobalState","children","useReducer","dispatch","getCountryRegionsInfo","date","Date","dateToInsert","getFullYear","getMonth","getDate","Provider","newCountryId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34020064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cases\":\"PerCountryCases_cases__NBQg1\",\"cases__title\":\"PerCountryCases_cases__title__1Tep-\",\"cases__list\":\"PerCountryCases_cases__list__24p9F\",\"cases__list_item\":\"PerCountryCases_cases__list_item__FdSKH\",\"cases__list_item_injured\":\"PerCountryCases_cases__list_item_injured__3Xpmr\",\"cases__list_item_country\":\"PerCountryCases_cases__list_item_country__2xWAn\",\"cases__list_item_selected\":\"PerCountryCases_cases__list_item_selected__3KjhM\",\"cases__list_active\":\"PerCountryCases_cases__list_active__3hEBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__10-JN\",\"mainContainer\":\"App_mainContainer__3vKuj\",\"appPanelLeft\":\"App_appPanelLeft__3h70A\",\"mapContainer\":\"App_mapContainer__2MBWQ\",\"appPanelRight\":\"App_appPanelRight__2V9QN\",\"appPanelRight__top\":\"App_appPanelRight__top__2TuNB\",\"appPanelRight__bot\":\"App_appPanelRight__bot__2Mlg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GlobalCases\":\"GlobalCases_GlobalCases__1pWmf\",\"GlobalCases__text\":\"GlobalCases_GlobalCases__text__3KthP\",\"GlobalCases__number\":\"GlobalCases_GlobalCases__number__uaToT\",\"stretchButton\":\"GlobalCases_stretchButton__2jQga\",\"stretchedBlock\":\"GlobalCases_stretchedBlock__3smQK\",\"normalGlobalCasesBlock\":\"GlobalCases_normalGlobalCasesBlock__3Orup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2Exe8\",\"titleText\":\"Header_titleText__1rJJn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diagram\":\"Diagram_diagram__XlNT_\"};","import {\n  GET_GLOBAL_INFO,\n  GET_COUNTRIES_INFO,\n  SET_COUNTRY_TO_OBSERVE,\n  UNSET_COUNTRY_TO_OBSERVE,\n  SET_COUNTRY_REGIONS_INFO,\n  GET_SEARCH_RESULT, SET_CONTENT_TYPE,\n} from './actionTypes';\n\nconst GlobalReducer = (state, action) => {\n  switch (action.type) {\n    case GET_GLOBAL_INFO:\n      return {\n        ...state,\n        global: action.payload,\n      };\n    case GET_COUNTRIES_INFO:\n      return {\n        ...state,\n        countries: action.payload.filter((country) => country.countryInfo._id !== null),\n        selectedCountryInfo: state.selectedCountryId !== -1\n          ? action.payload\n            .filter((country) => country.countryInfo._id === state.selectedCountryId)\n          : state.global,\n      };\n    case SET_COUNTRY_TO_OBSERVE:\n      return {\n        ...state,\n        selectedCountryId: action.payload,\n        selectedCountryInfo: action.payload\n          ? state.countries\n            .filter((country) => country.countryInfo._id === action.payload)[0] : global,\n      };\n    case UNSET_COUNTRY_TO_OBSERVE:\n      return {\n        ...state,\n        selectedCountryId: -1,\n        selectedCountryInfo: state.global,\n      };\n    case GET_SEARCH_RESULT:\n      return {\n        ...state,\n        searchResult: state.countries\n          .filter((country) => country.country.toLowerCase().includes(action.query.toLowerCase())),\n      };\n    case SET_COUNTRY_REGIONS_INFO:\n      return {\n        ...state,\n        countryRegions: action.payload,\n      };\n    case SET_CONTENT_TYPE:\n      return {\n        ...state,\n        contentConfig: {\n          ...state.contentConfig,\n          [action.contentType]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default GlobalReducer;\n","export const GET_GLOBAL_INFO = 'GET_GLOBAL_INFO';\nexport const GET_COUNTRIES_INFO = 'GET_COUNTRIES_INFO';\nexport const SET_COUNTRY_TO_OBSERVE = 'SET_COUNTRY_TO_OBSERVE';\nexport const UNSET_COUNTRY_TO_OBSERVE = 'UNSET_COUNTRY_TO_OBSERVE';\nexport const SET_COUNTRY_REGIONS_INFO = 'SET_COUNTRY_REGIONS_INFO';\nexport const GET_SEARCH_RESULT = 'GET_SEARCH_RESULT';\nexport const SET_CONTENT_TYPE = 'SET_CONTENT_TYPE';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu__btn\":\"Menu_menu__btn__2vIOK\",\"menu__btn_img\":\"Menu_menu__btn_img__3myTB\",\"menu__items\":\"Menu_menu__items__45koj\",\"menu__items_item\":\"Menu_menu__items_item__1hvOI\"};","import { createContext } from 'react';\n\nconst GlobalContext = createContext({});\n\nexport default GlobalContext;\n","export default __webpack_public_path__ + \"static/media/searchSvg.8a17900c.svg\";","import { useEffect } from 'react';\n\nconst useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n    };\n  }, [ref, handler]);\n};\n\nexport default useClickOutside;\n","import React from 'react';\n\nconst useSelectedCountry = (countryId, selectedCountryId) => {\n  const [isSelected, setSelected] = React.useState(false);\n\n  React.useEffect(() => {\n    if (countryId === selectedCountryId) {\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n  }, [selectedCountryId]);\n\n  return isSelected;\n};\n\nexport default useSelectedCountry;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Search.module.scss';\nimport useSelectedCountry from '../../../customHooks/useSelectedCountry';\n\n// eslint-disable-next-line no-unused-vars\nconst SearchCountry = ({\n  country, setCountryToObserve, unsetCountryToObserve, selectedCountryId, flagImg,\n}) => {\n  const isSelected = useSelectedCountry(country.countryInfo._id, selectedCountryId);\n\n  return (\n    <div\n      className={isSelected ? style.search__results_item_selected : style.search__results_item}\n      id={country.countryInfo._id}\n      selected={isSelected}\n      onClick={() => {\n        if (isSelected) {\n          unsetCountryToObserve();\n        } else {\n          setCountryToObserve(country.countryInfo._id);\n        }\n      }}\n    >\n      <span className={style.search__results_item_text}>{country.country}</span>\n      <img className={style.search__results_item_img} src={flagImg} alt=\"flag\" />\n    </div>\n  );\n};\n\nSearchCountry.propTypes = {\n  country: PropTypes.shape({\n    cases: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  flagImg: PropTypes.string.isRequired,\n};\n\nexport default SearchCountry;\n","import React, {\n  useState, useEffect, useContext, useRef,\n} from 'react';\nimport searchSvg from '../../../assets/svg/searchSvg.svg';\nimport style from './Search.module.scss';\nimport GlobalContext from '../../../store/GlobalContext';\nimport useClickOutside from '../../../customHooks/useClickOutside';\nimport SearchCountry from './SearchCountry';\n\nconst Search = () => {\n  const [open, toggleOpen] = useState(false);\n  const [query, changeQuery] = useState('');\n  const {\n    state,\n    getSearchResult,\n    setCountryToObserve,\n    unsetCountryToObserve,\n  } = useContext(GlobalContext);\n  const searchRef = useRef();\n\n  useClickOutside(searchRef, () => toggleOpen(false));\n  useEffect(() => {\n    getSearchResult(query);\n  }, [query]);\n  return (\n    <div ref={searchRef} className={style.search} onClick={() => toggleOpen(true)}>\n      <input className={style.search__input} type=\"text\" value={query} onChange={(event) => changeQuery(event.target.value)} />\n      <img className={style.search__img} src={searchSvg} alt=\"search\" />\n      {\n        open\n          ? (\n            <div className={style.search__results}>\n              {state.searchResult.map((country) => {\n                const flagImg = country.countryInfo.flag;\n                return (\n                  <SearchCountry\n                    country={country}\n                    setCountryToObserve={setCountryToObserve}\n                    unsetCountryToObserve={unsetCountryToObserve}\n                    selectedCountryId={state.selectedCountryId}\n                    key={country.countryInfo._id}\n                    flagImg={flagImg}\n                  />\n                );\n              })}\n            </div>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/bars-solid.e8db7520.svg\";","const contentConstants = {\n  timePeriod: {\n    fullPeriod: 'fullPeriod',\n    lastDay: 'lastDay',\n  },\n  quantities: {\n    whole: 'whole',\n    per100: 'per100',\n  },\n};\n\nexport default contentConstants;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../Menu.module.scss';\nimport contentConstants from '../../../../constants/contentConstants';\n\nconst SelectQuantities = ({\n  selected,\n  setContentConfig,\n}) => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const { whole, per100 } = contentConstants.quantities;\n\n  useEffect(() => {\n    setSelectedValue(selected);\n  }, [selected]);\n\n  return (\n    <div className={style.menu__items_item}>\n      Show quantities:\n      <select\n        className={style.menu__items_item__select}\n        value={selectedValue}\n        onChange={(event) => setContentConfig('quantities', event.target.value)}\n      >\n        <option className={style.menu__items_item__select_option} value={per100}>per 100000</option>\n        <option className={style.menu__items_item__select_option} value={whole}>whole</option>\n      </select>\n    </div>\n  );\n};\n\nSelectQuantities.propTypes = {\n  selected: PropTypes.string.isRequired,\n  setContentConfig: PropTypes.func.isRequired,\n};\n\nexport default SelectQuantities;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../Menu.module.scss';\nimport contentConstants from '../../../../constants/contentConstants';\n\nfunction SelectTimePeriod({\n  selected,\n  setContentConfig,\n}) {\n  const [selectedValue, setSelectedValue] = useState('');\n  const { lastDay, fullPeriod } = contentConstants.timePeriod;\n\n  useEffect(() => {\n    setSelectedValue(selected);\n  }, [selected]);\n\n  return (\n    <div className={style.menu__items_item}>\n      Show statistics by:\n      <select\n        className={style.menu__items_item__select}\n        value={selectedValue}\n        onChange={(event) => setContentConfig('timePeriod', event.target.value)}\n      >\n        <option className={style.menu__items_item__select_option} value={lastDay}>last day</option>\n        <option\n          className={style.menu__items_item__select_option}\n          value={fullPeriod}\n        >\n          full period\n        </option>\n      </select>\n    </div>\n  );\n}\n\nSelectTimePeriod.propTypes = {\n  selected: PropTypes.string.isRequired,\n  setContentConfig: PropTypes.func.isRequired,\n};\n\nexport default SelectTimePeriod;\n","import React, { useState, useRef, useContext } from 'react';\nimport style from './Menu.module.scss';\nimport useClickOutside from '../../../customHooks/useClickOutside';\nimport menuImg from '../../../assets/svg/bars-solid.svg';\nimport GlobalContext from '../../../store/GlobalContext';\nimport SelectQuantities from './SelectQuantities/SelectQuantities';\nimport SelectTimePeriod from './SelectTimePeriod/SelectTimePeriod';\n\nconst Menu = () => {\n  const {\n    state,\n    setContentConfig,\n  } = useContext(GlobalContext);\n  const [open, toggleOpen] = useState(false);\n  const menuRef = useRef();\n  useClickOutside(menuRef, () => toggleOpen(false));\n  return (\n    <div className={style.menu} ref={menuRef}>\n      <button className={style.menu__btn} onClick={() => toggleOpen(!open)} type=\"button\">\n        <img className={style.menu__btn_img} src={menuImg} alt=\"menu\" />\n      </button>\n      {\n        open\n          ? (\n            <div className={style.menu__items}>\n              <SelectQuantities\n                selected={state.contentConfig.quantities}\n                setContentConfig={setContentConfig}\n              />\n              <SelectTimePeriod\n                selected={state.contentConfig.timePeriod}\n                setContentConfig={setContentConfig}\n              />\n            </div>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport style from './Header.module.scss';\nimport Search from './Search/Search';\nimport Menu from './Menu/Menu';\n\nconst Header = () => (\n  <header className={style.title}>\n    <span className={style.titleText}>Covid dashboard</span>\n    <p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ –¥–æ –∫–æ–Ω—Ü–∞.</p>\n    <p>–ë—É–¥—É –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ 27.12</p>\n    <Search />\n    <Menu />\n  </header>\n);\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/expandSvg.cc9c15ed.svg\";","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './GlobalCases.module.scss';\nimport expandSvg from '../../assets/svg/expandSvg.svg';\n\nconst GlobalCases = ({ cases, countryName }) => {\n  const [isStretched, toggleIsStretched] = useState(false);\n  const [className, setClassName] = useState('');\n  const casesRef = useRef();\n  useEffect(() => {\n    if (isStretched === true) {\n      setClassName('stretchedBlock');\n    } else {\n      setClassName('GlobalCases');\n    }\n  }, [isStretched]);\n  return (\n    <div ref={casesRef} className={style[`${className}`]}>\n      <button type=\"button\" className={style.stretchButton} onClick={() => toggleIsStretched(!isStretched)}><img src={expandSvg} alt=\"expand\" /></button>\n      <p className={style.GlobalCases__text}>{countryName ? `Cases in ${countryName}` : 'Global cases'}</p>\n      <p className={style.GlobalCases__number}>{cases}</p>\n    </div>\n  );\n};\n\nGlobalCases.propTypes = {\n  cases: PropTypes.number.isRequired,\n  countryName: PropTypes.string.isRequired,\n};\n\nexport default GlobalCases;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './PerCountryCases.module.scss';\nimport useSelectedCountry from '../../customHooks/useSelectedCountry';\nimport contentConstants from '../../constants/contentConstants';\n\nconst Country = ({\n  country, setCountryToObserve, unsetCountryToObserve, selectedCountryId, contentConfig,\n}) => {\n  const isSelected = useSelectedCountry(country.countryInfo._id, selectedCountryId);\n  const { quantities } = contentConfig;\n  const { whole } = contentConstants.quantities;\n\n  return (\n    <div\n      className={isSelected ? style.cases__list_item_selected : style.cases__list_item}\n      id={country.countryInfo._id}\n      selected={isSelected}\n      onClick={() => {\n        if (isSelected) {\n          unsetCountryToObserve();\n        } else {\n          setCountryToObserve(country.countryInfo._id);\n        }\n      }}\n    >\n      <span className={style.cases__list_item_injured}>\n        {quantities === whole ? country.cases : country.casesPerOneMillion}\n      </span>\n      <span className={style.cases__list_item_country}>{country.country}</span>\n    </div>\n  );\n};\n\nCountry.propTypes = {\n  country: PropTypes.shape({\n    cases: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    casesPerOneMillion: PropTypes.number.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Country;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './PerCountryCases.module.scss';\nimport Country from './Country';\n\nconst PerCountryCases = ({\n  countries, setCountryToObserve, unsetCountryToObserve, selectedCountryId, contentConfig,\n}) => (\n  <div className={style.cases}>\n    <p className={style.cases__title}>Cases by Country / region/ sovereignty</p>\n    <div className={style.cases__list}>\n      {\n        countries.length > 0\n          ? countries.sort((a, b) => b.cases - a.cases)\n            .map((country) => (\n              <Country\n                country={country}\n                setCountryToObserve={setCountryToObserve}\n                unsetCountryToObserve={unsetCountryToObserve}\n                selectedCountryId={selectedCountryId}\n                key={country.countryInfo._id}\n                contentConfig={contentConfig}\n              />\n            ))\n          : (\n            <div className={style.cases__list_item}>\n              No data provided\n            </div>\n          )\n      }\n    </div>\n  </div>\n);\n\nPerCountryCases.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    cases: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  })).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default PerCountryCases;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker } from 'react-mapbox-gl';\n\nconst MapMarker = ({\n  select, long, lat, cases,\n}) => {\n  const [radius, setRadius] = useState(10);\n\n  useEffect(() => {\n    setRadius(Math.floor(cases / 100000) < 10 ? 10 : Math.floor(cases / 100000));\n    if (radius > 40) {\n      setRadius(50);\n    }\n  }, []);\n\n  return (\n    <div onClick={select}>\n      <Marker\n        coordinates={[long, lat]}\n        style={{\n          width: `${radius}px`,\n          height: `${radius}px`,\n          backgroundColor: '#8e3f56',\n          borderRadius: '50%',\n          opacity: '0.8',\n        }}\n      />\n    </div>\n\n  );\n};\n\nMapMarker.propTypes = {\n  select: PropTypes.func.isRequired,\n  lat: PropTypes.number.isRequired,\n  long: PropTypes.number.isRequired,\n  cases: PropTypes.number.isRequired,\n};\n\nexport default MapMarker;\n","export default __webpack_public_path__ + \"static/media/times-solid.b00507d1.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './MapCountryInfo.scss';\nimport closeIcon from '../../../assets/svg/times-solid.svg';\n\nconst MapCountryInfo = ({\n  close, cases, deaths, country, recovered,\n}) => (\n  <div className={style.mapCountryInfo}>\n    <button className={style.mapCountryInfo__button} onClick={close} type=\"button\" label=\"close\">\n      <img src={closeIcon} alt=\"close\" />\n    </button>\n    <p>{`Country name: ${country}`}</p>\n    <p>{`Number of cases: ${cases}`}</p>\n    <p>{`Number of deaths: ${deaths}`}</p>\n    <p>{`Number of recovered: ${recovered}`}</p>\n  </div>\n);\n\nMapCountryInfo.propTypes = {\n  close: PropTypes.func.isRequired,\n  cases: PropTypes.number.isRequired,\n  deaths: PropTypes.number.isRequired,\n  country: PropTypes.string.isRequired,\n  recovered: PropTypes.number.isRequired,\n};\n\nexport default MapCountryInfo;\n","const apiEndpoints = {\n  globalInfoEndpoint: 'https://disease.sh/v3/covid-19/all',\n  countriesInfoEndpoint: 'https://disease.sh/v3/covid-19/countries',\n};\n\nexport const mapBoxToken = 'pk.eyJ1IjoidmVsaWRvc3MiLCJhIjoiY2tpeXU1ZjRxMTF4ZDMwbnhza3ZqOGxnaSJ9.gg-_TAvLpVC1BXhh3EO-fA';\n\nexport default apiEndpoints;\n","import React, { useState } from 'react';\nimport ReactMapboxGl, { Popup } from 'react-mapbox-gl';\nimport PropTypes from 'prop-types';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport MapMarker from './MapMarker/MapMarker';\nimport MapCountryInfo from './MapCountryInfo/MapCountryInfo';\nimport { mapBoxToken } from '../../constants/apiEndpoints';\n\nconst Map = ({ countries }) => {\n  const MapComponent = ReactMapboxGl({\n    accessToken: mapBoxToken,\n  });\n  const [selected, toggleSelected] = useState(null);\n\n  return (\n    <MapComponent\n      // eslint-disable-next-line react/style-prop-object\n      style=\"mapbox://styles/mapbox/light-v10\"\n      containerStyle={{\n        width: '100%',\n        height: '100%',\n        borderRadius: '20px',\n        position: 'relative',\n      }}\n      —Åenter={[32, 49]}\n      zoom={[3]}\n    >\n      {\n        countries.map((country) => (\n          <MapMarker\n            select={() => toggleSelected(country)}\n            key={country.countryInfo._id}\n            long={country.countryInfo.long}\n            lat={country.countryInfo.lat}\n            cases={country.cases}\n          />\n        ))\n      }\n      {\n        selected ? (\n          <Popup\n            coordinates={[selected.countryInfo.long, selected.countryInfo.lat]}\n            style={{\n              zIndex: 20,\n            }}\n          >\n            <MapCountryInfo\n              close={() => toggleSelected(null)}\n              country={selected.country}\n              recovered={selected.recovered}\n              cases={selected.cases}\n              deaths={selected.deaths}\n            />\n          </Popup>\n        ) : null\n      }\n    </MapComponent>\n  );\n};\n\nMap.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    cases: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n      lat: PropTypes.number.isRequired,\n      long: PropTypes.number.isRequired,\n    }),\n  })).isRequired,\n};\n\nexport default Map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './GlobalLosses.module.scss';\nimport useSelectedCountry from '../../customHooks/useSelectedCountry';\nimport contentConstants from '../../constants/contentConstants';\n\nconst Country = ({\n  country, setCountryToObserve, unsetCountryToObserve, selectedCountryId, contentConfig,\n}) => {\n  const isSelected = useSelectedCountry(country.countryInfo._id, selectedCountryId);\n  const { quantities } = contentConfig;\n  const { whole } = contentConstants.quantities;\n\n  return (\n    <div\n      className={isSelected ? style.losses__list_item_selected : style.losses__list_item}\n      id={country.countryInfo._id}\n      selected={isSelected}\n      onClick={() => {\n        if (isSelected) {\n          unsetCountryToObserve();\n        } else {\n          setCountryToObserve(country.countryInfo._id);\n        }\n      }}\n    >\n      <span className={style.losses__list_item_name}>{country.country}</span>\n      <span className={style.losses__list_item_number}>\n        {`${quantities === whole ? country.deaths : country.deathsPerOneMillion} `}\n        deaths\n      </span>\n    </div>\n  );\n};\n\nCountry.propTypes = {\n  country: PropTypes.shape({\n    deaths: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    deathsPerOneMillion: PropTypes.number.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Country;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './GlobalLosses.module.scss';\nimport CountryWithLosses from './CountryWithLosses';\n\nconst GlobalLosses = ({\n  losses,\n  countries,\n  countryName,\n  setCountryToObserve,\n  unsetCountryToObserve,\n  selectedCountryId,\n  contentConfig,\n}) => (\n  <div className={style.losses}>\n    <div className={style.losses__stat}>\n      <span className={style.losses__stat_name}>{countryName ? `Deaths in ${countryName}` : 'Global deaths:'}</span>\n      <span className={style.losses__stat_number}>{losses}</span>\n    </div>\n    <div className={style.losses__list}>\n      {\n        countries\n          ? countries.sort((a, b) => b.deaths - a.deaths)\n            .map((country) => (\n              <CountryWithLosses\n                country={country}\n                setCountryToObserve={setCountryToObserve}\n                unsetCountryToObserve={unsetCountryToObserve}\n                selectedCountryId={selectedCountryId}\n                key={country.countryInfo._id}\n                contentConfig={contentConfig}\n              />\n            ))\n          : (\n            <div className={style.cases__list_item}>\n              No data provided\n            </div>\n          )\n      }\n    </div>\n  </div>\n);\n\nGlobalLosses.propTypes = {\n  losses: PropTypes.number.isRequired,\n  countryName: PropTypes.string.isRequired,\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    deaths: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  })).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default GlobalLosses;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Recovered.module.scss';\nimport useSelectedCountry from '../../customHooks/useSelectedCountry';\nimport contentConstants from '../../constants/contentConstants';\n\nconst CountryWithRecovered = ({\n  country, setCountryToObserve, unsetCountryToObserve, selectedCountryId, contentConfig,\n}) => {\n  const isSelected = useSelectedCountry(country.countryInfo._id, selectedCountryId);\n  const { quantities } = contentConfig;\n  const { whole } = contentConstants.quantities;\n  return (\n    <div\n      className={isSelected ? style.recovered__list_item_selected : style.recovered__list_item}\n      id={country.countryInfo._id}\n      selected={isSelected}\n      onClick={() => {\n        if (isSelected) {\n          unsetCountryToObserve();\n        } else {\n          setCountryToObserve(country.countryInfo._id);\n        }\n      }}\n    >\n      <span className={style.recovered__list_item_recovered}>\n        {`${quantities === whole ? country.recovered : country.recoveredPerOneMillion} `}\n      </span>\n      <span className={style.recovered__list_item_country}>\n        {country.country}\n      </span>\n    </div>\n  );\n};\n\nCountryWithRecovered.propTypes = {\n  country: PropTypes.shape({\n    recovered: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    recoveredPerOneMillion: PropTypes.number.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CountryWithRecovered;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Recovered.module.scss';\nimport CountryWithRecovered from './CountryWithRecovered';\n\nconst Recovered = ({\n  recovered,\n  countries,\n  countryName,\n  setCountryToObserve,\n  unsetCountryToObserve,\n  selectedCountryId,\n  contentConfig,\n}) => (\n  <div className={style.recovered}>\n    <div className={style.recovered__title}>\n      <span className={style.recovered__title_top}>{countryName ? `Recovered in ${countryName}` : 'Global recovered:'}</span>\n      <span className={style.recovered__title_bot}>{recovered}</span>\n    </div>\n    <div className={style.recovered__list}>\n      {\n        countries\n          ? countries.sort((a, b) => b.recovered - a.recovered)\n            .map((country) => (\n              <CountryWithRecovered\n                country={country}\n                setCountryToObserve={setCountryToObserve}\n                unsetCountryToObserve={unsetCountryToObserve}\n                selectedCountryId={selectedCountryId}\n                key={country.countryInfo._id}\n                contentConfig={contentConfig}\n              />\n            ))\n          : (\n            <div className={style.cases__list_item}>\n              No data provided\n            </div>\n          )\n      }\n    </div>\n  </div>\n);\n\nRecovered.propTypes = {\n  recovered: PropTypes.number.isRequired,\n  countryName: PropTypes.string.isRequired,\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    deaths: PropTypes.number.isRequired,\n    country: PropTypes.string.isRequired,\n    countryInfo: PropTypes.shape({\n      _id: PropTypes.number.isRequired,\n    }),\n  })).isRequired,\n  setCountryToObserve: PropTypes.func.isRequired,\n  unsetCountryToObserve: PropTypes.func.isRequired,\n  selectedCountryId: PropTypes.number.isRequired,\n  contentConfig: PropTypes.shape({\n    timePeriod: PropTypes.string.isRequired,\n    quantities: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Recovered;\n","import React from 'react';\nimport style from './Diagram.module.scss';\n\nconst Diagram = () => (\n  <div className={style.diagram}>\n    Diagram\n  </div>\n);\n\nexport default Diagram;\n","import React, { useEffect, useContext } from 'react';\nimport GlobalContext from './store/GlobalContext';\nimport style from './App.module.scss';\nimport Header from './components/Header/Header';\nimport GlobalCases from './components/GlobalCases/GlobalCases';\nimport PerCountryCases from './components/PerCountryCases/PerCountryCases';\nimport Map from './components/Map/Map';\nimport GlobalLosses from './components/GlobalLosses/GlobalLosses';\nimport Recovered from './components/Recovered/Recovered';\nimport Diagram from './components/Diagram/Diagram';\nimport contentConstants from './constants/contentConstants';\n\nfunction App() {\n  const { whole } = contentConstants.quantities;\n  const {\n    state,\n    getGlobalState,\n    getPerCountryState,\n    setCountryToObserve,\n    unsetCountryToObserve,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getGlobalState();\n    getPerCountryState();\n  }, []);\n\n  const {\n    contentConfig,\n    countries,\n    selectedCountryInfo,\n  } = state;\n\n  const data = {\n    globalCases: contentConfig.quantities === whole\n      ? selectedCountryInfo.cases\n      : selectedCountryInfo.casesPerOneMillion,\n    countryName: selectedCountryInfo.country ? selectedCountryInfo.country : '',\n    losses: contentConfig.quantities === whole\n      ? selectedCountryInfo.deaths\n      : selectedCountryInfo.deathsPerOneMillion,\n    countries,\n    recovered: contentConfig.quantities === whole\n      ? selectedCountryInfo.recovered\n      : selectedCountryInfo.recoveredPerOneMillion,\n  };\n\n  return (\n    <div className={style.App}>\n      <Header />\n      <main className={style.mainContainer}>\n        <div className={style.appPanelLeft}>\n          {\n            data.globalCases\n              ? (\n                <GlobalCases\n                  cases={data.globalCases}\n                  countryName={data.countryName}\n                />\n              )\n              : null\n          }\n          {\n            data.countries\n              ? (\n                <PerCountryCases\n                  setCountryToObserve={setCountryToObserve}\n                  unsetCountryToObserve={unsetCountryToObserve}\n                  countries={data.countries}\n                  selectedCountryId={state.selectedCountryId}\n                  contentConfig={contentConfig}\n                />\n              )\n              : null\n          }\n        </div>\n        <div className={style.mapContainer}>\n          {\n            data.countries.length > 0\n              ? <Map countries={data.countries} />\n              : null\n          }\n        </div>\n        <div className={style.appPanelRight}>\n          <div className={style.appPanelRight__top}>\n            {\n              data.losses && data.countries\n                ? (\n                  <GlobalLosses\n                    losses={data.losses}\n                    countries={data.countries}\n                    countryName={data.countryName ? data.countryName : ''}\n                    setCountryToObserve={setCountryToObserve}\n                    unsetCountryToObserve={unsetCountryToObserve}\n                    selectedCountryId={state.selectedCountryId}\n                    contentConfig={contentConfig}\n                  />\n                )\n                : null\n            }\n            {\n              data.recovered && data.countries\n                ? (\n                  <Recovered\n                    recovered={data.recovered}\n                    countries={data.countries}\n                    countryName={data.countryName ? data.countryName : ''}\n                    setCountryToObserve={setCountryToObserve}\n                    unsetCountryToObserve={unsetCountryToObserve}\n                    selectedCountryId={state.selectedCountryId}\n                    contentConfig={contentConfig}\n                  />\n                )\n                : null\n            }\n          </div>\n          <div className={style.appPanelRight__bot}>\n            <Diagram />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const api = async (url) => {\n  const request = await fetch(url);\n  return request.json();\n};\nexport default api;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  GET_GLOBAL_INFO,\n  GET_COUNTRIES_INFO,\n  SET_COUNTRY_REGIONS_INFO,\n  SET_COUNTRY_TO_OBSERVE,\n  UNSET_COUNTRY_TO_OBSERVE,\n  GET_SEARCH_RESULT, SET_CONTENT_TYPE,\n} from './actionTypes';\nimport GlobalReducer from './GlobalReducer';\nimport api from '../api/api';\nimport GlobalContext from './GlobalContext';\nimport contentConstants from '../constants/contentConstants';\nimport apiEndpoints from '../constants/apiEndpoints';\n\nconst { timePeriod, quantities } = contentConstants;\nconst { globalInfoEndpoint, countriesInfoEndpoint } = apiEndpoints;\n\nconst GlobalState = ({ children }) => {\n  const [state, dispatch] = useReducer(GlobalReducer, {\n    global: {},\n    contentConfig: {\n      timePeriod: timePeriod.fullPeriod,\n      quantities: quantities.whole,\n    },\n    countries: [],\n    selectedCountryId: -1,\n    selectedCountryInfo: {},\n    countryRegions: [],\n    searchResult: [],\n  });\n\n  const getGlobalState = async () => {\n    const data = await api(globalInfoEndpoint);\n    dispatch({\n      type: GET_GLOBAL_INFO,\n      payload: data,\n    });\n  };\n\n  const getPerCountryState = async () => {\n    const data = await api(countriesInfoEndpoint);\n    dispatch({\n      type: GET_COUNTRIES_INFO,\n      payload: data,\n    });\n  };\n\n  const getCountryRegionsInfo = async (country) => {\n    const date = new Date();\n    const dateToInsert = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    const data = await api(`https://api.covid19tracking.narrativa.com/api/${dateToInsert}/country/${country}`);\n    dispatch({\n      type: SET_COUNTRY_REGIONS_INFO,\n      payload: data,\n    });\n  };\n\n  const setCountryToObserve = (newCountryId) => {\n    dispatch({\n      type: SET_COUNTRY_TO_OBSERVE,\n      payload: newCountryId,\n    });\n  };\n\n  const setContentConfig = (contentType, value) => {\n    dispatch({\n      type: SET_CONTENT_TYPE,\n      contentType,\n      value,\n    });\n  };\n\n  const unsetCountryToObserve = () => {\n    dispatch({\n      type: UNSET_COUNTRY_TO_OBSERVE,\n    });\n  };\n\n  const getSearchResult = (query) => {\n    dispatch({\n      type: GET_SEARCH_RESULT,\n      query,\n    });\n  };\n\n  GlobalState.propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]).isRequired,\n  };\n\n  return (\n    <GlobalContext.Provider value={{\n      getGlobalState,\n      getPerCountryState,\n      setCountryToObserve,\n      unsetCountryToObserve,\n      getCountryRegionsInfo,\n      getSearchResult,\n      setContentConfig,\n      state,\n    }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GlobalState from './store/GlobalState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalState>\n      <App />\n    </GlobalState>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"losses\":\"GlobalLosses_losses__1zPvr\",\"losses__stat\":\"GlobalLosses_losses__stat__256Zp\",\"losses__stat_name\":\"GlobalLosses_losses__stat_name__2rOPm\",\"losses__stat_number\":\"GlobalLosses_losses__stat_number__3ATdj\",\"losses__list\":\"GlobalLosses_losses__list__3jHgB\",\"losses__list_item\":\"GlobalLosses_losses__list_item__3cL9w\",\"losses__list_item_name\":\"GlobalLosses_losses__list_item_name__3CRnq\",\"losses__list_item_number\":\"GlobalLosses_losses__list_item_number__3RTu6\",\"losses__list_item_selected\":\"GlobalLosses_losses__list_item_selected__gy52W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovered\":\"Recovered_recovered__3QGN2\",\"recovered__title\":\"Recovered_recovered__title__13nA4\",\"recovered__title_top\":\"Recovered_recovered__title_top__2xjVb\",\"recovered__title_bot\":\"Recovered_recovered__title_bot__3h6mM\",\"recovered__list\":\"Recovered_recovered__list__1iwAN\",\"recovered__list_item\":\"Recovered_recovered__list_item__1bwQc\",\"recovered__list_item_loss\":\"Recovered_recovered__list_item_loss__2a-HC\",\"recovered__list_item_recovered\":\"Recovered_recovered__list_item_recovered__12wfg\",\"recovered__list_item_city\":\"Recovered_recovered__list_item_city__1-f6e\",\"recovered__list_item_selected\":\"Recovered_recovered__list_item_selected__32LrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3324R\",\"search__input\":\"Search_search__input__2Md75\",\"search__img\":\"Search_search__img__hpZ2Q\",\"search__results\":\"Search_search__results__2DTl_\",\"search__results_item\":\"Search_search__results_item__2ZVLi\",\"search__results_item_img\":\"Search_search__results_item_img__1DGcV\",\"search__results_item_selected\":\"Search_search__results_item_selected__fD5dj\"};"],"sourceRoot":""}